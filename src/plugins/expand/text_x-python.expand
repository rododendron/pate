#!/usr/bin/python


def fori(s=None):
    if s is None:
        return 'for i in xrange(\1):\n\t'
    else:
        return 'for i in xrange(%s):\n\t\1' % s

# cannot define a function 'class' as class is a keyword
def _class(s=None):
    if s is None:
        return '''\
class \1:
\tdef __init__(self):
\t\t
'''
    else:
        base, parents = [x.strip() for x in s.split(',', 1)]
        head = '%s(%s)' % (base, parents) if parents else base
        s = '''\
class %s:
\tdef __init__(self\1):
\t\t''' % head
        if parents:
            for parent in parents.split(','):
                parent = parent.strip()
                s += '%s.__init__(self)\n\t\t' % parent
        return s + '\n'
_class.__name__ = 'class'


def property(name):
    # cater for the most common case -- a get and a set property
    return '''\
def _get_%(name)s(self):
\t\1
def _set_%(name)s(self, %(name)s):
\t
%(name)s = property(_get_%(name)s, _set_%(name)s)''' % {'name': name}


def main():
    return '''def main():
\t\1

if __name__ == '__main__':
\tmain()
'''



# kate: space-indent on;

